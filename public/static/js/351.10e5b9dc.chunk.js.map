{"version":3,"file":"static/js/351.10e5b9dc.chunk.js","mappings":"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","sources":["HOC/withAuth.js","Pages/Attendance/index.js"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Store/AuthContext\";\r\nconst withAuth = (WrappedComponent, protectedPage) => {\r\n  // eslint-disable-next-line react/display-name\r\n  return (props) => {\r\n    const authContext = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n    const accessToken = authContext.userToken;\r\n\r\n    useEffect(() => {\r\n      if (typeof window !== \"undefined\") {\r\n        if (!accessToken) {\r\n          navigate(\"/auth\", { replace: true });\r\n        } else if (protectedPage?.indexOf(authContext.userRole) === -1) {\r\n          navigate(\"/403\", { replace: true });\r\n        }\r\n      }\r\n    }, [accessToken, authContext.userRole, navigate]);\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      if (authContext.isLoading) {\r\n        console.log(\"loading from with auth\");\r\n        return null;\r\n      }\r\n\r\n      return <WrappedComponent {...props} />;\r\n    }\r\n    return null;\r\n  };\r\n};\r\n\r\nexport default withAuth;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Typography,\r\n  Table,\r\n  Modal,\r\n  Space,\r\n  Tag,\r\n  Image,\r\n  message,\r\n  Select,\r\n} from \"antd\";\r\nimport {\r\n  Card,\r\n  FlexContainer,\r\n  FlexEnd,\r\n  FormRangePicker,\r\n  FormSelect,\r\n} from \"../../Components\";\r\nimport withAuth from \"../../HOC/withAuth\";\r\nimport { useDisclosure, useGetData, useGetDataPagination } from \"../../Hooks\";\r\nimport { AuthContext } from \"../../Store/AuthContext\";\r\nimport { FiFilter } from \"react-icons/fi\";\r\nimport { RiFileExcel2Line } from \"react-icons/ri\";\r\nimport moment from \"moment\";\r\nimport { successColor, dangerColor } from \"../../Utils/colors\";\r\nimport fileDownload from \"js-file-download\";\r\nimport { endpoint } from \"../../Utils/enpoint\";\r\nimport axios from \"axios\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst ListContent = ({ label, children }) => (\r\n  <div\r\n    style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"14px\" }}\r\n  >\r\n    <Text type=\"secondary\">{label}</Text>\r\n    <Title level={5} style={{ marginTop: \"0px\" }}>\r\n      {children}\r\n    </Title>\r\n  </div>\r\n);\r\n\r\nconst ListPhoto = ({ label, image, time }) => (\r\n  <div\r\n    style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"14px\" }}\r\n  >\r\n    <Text type=\"secondary\">{label}</Text>\r\n    {time === null ? (\r\n      <Text>No Photo</Text>\r\n    ) : (\r\n      <div style={{ width: 300, height: 200, overflow: \"hidden\" }}>\r\n        <Image width={300} src={image} />\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst myDate = (date) => {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nconst Attendance = () => {\r\n  const { signOut } = useContext(AuthContext);\r\n  const authContext = useContext(AuthContext);\r\n  const [configData, setConfigData] = useState({\r\n    page: 1,\r\n    fromdate: myDate(authContext.firstDate),\r\n    todate: myDate(authContext.lastDate),\r\n    update: false,\r\n  });\r\n  const [perPage, setPerPage] = useState(20);\r\n  const [empId, setEmpId] = useState(\"\");\r\n\r\n  const { data, pagination, loading } = useGetDataPagination(\r\n    `attendance?emp_id=${empId}&from=${configData.fromdate}&to=${configData.todate}&page=${configData.page}&perpage=${perPage}`,\r\n    configData.update\r\n  );\r\n\r\n  const { data: dataEmployee, loading: loadingEmployee } =\r\n    useGetData(\"employee\");\r\n\r\n  const [date, setDate] = useState([\r\n    myDate(authContext.firstDate),\r\n    myDate(authContext.lastDate),\r\n  ]);\r\n  const [dataTemp, setDataTemp] = useState({});\r\n  const [loadingExport, setLoadingExport] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      date: [moment(authContext.firstDate), moment(authContext.lastDate)],\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleFilterDate = () => {\r\n    if (date.length === 0) {\r\n      console.log(\"Form tidak bolah kosong\");\r\n\r\n      return null;\r\n    }\r\n\r\n    setConfigData({\r\n      ...configData,\r\n      page: 1,\r\n      fromdate: date[0],\r\n      todate: date[1],\r\n    });\r\n  };\r\n\r\n  const ExportToExcel = async () => {\r\n    setLoadingExport(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${endpoint}/api/attendance/export?emp_id=${empId}&from=${configData.fromdate}&to=${configData.todate}`,\r\n        {\r\n          headers: {\r\n            Authorization: `bearer ${authContext.userToken}`,\r\n          },\r\n          responseType: \"blob\",\r\n        }\r\n      );\r\n\r\n      if (!response) {\r\n        throw new Error();\r\n      }\r\n\r\n      message.success(\"Download in progress\");\r\n      fileDownload(response.data, \"Attendance.xlsx\");\r\n      console.log(\r\n        `fetch data /attendance/export?emp_id=${empId}&from=${configData.fromdate}&to=${configData.todate}`\r\n      );\r\n      setLoadingExport(false);\r\n    } catch (err) {\r\n      if (err.response?.status === 500) {\r\n        message.error(`${err.response.status}, ${err.response.statusText}`);\r\n        signOut();\r\n\r\n        return null;\r\n      }\r\n\r\n      if (err.response) {\r\n        message.error(`${err.response.status}, ${err.response.statusText}`);\r\n        setLoadingExport(false);\r\n\r\n        return null;\r\n      }\r\n\r\n      message.error(\"Something went wrong, please try again..\");\r\n      console.log(err);\r\n      setLoadingExport(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      width: 70,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"employe\",\r\n      render: (text, record) => (\r\n        <Text\r\n          strong\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            setDataTemp(record);\r\n            onOpen();\r\n          }}\r\n        >\r\n          {text}\r\n        </Text>\r\n      ),\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Site\",\r\n      dataIndex: \"site_name\",\r\n      responsive: [\"lg\"],\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"check_in\",\r\n      render: (text) => text?.substr(0, 10),\r\n    },\r\n    {\r\n      title: \"In\",\r\n      dataIndex: \"check_in\",\r\n      render: (text) => text?.substr(11, 5),\r\n    },\r\n    {\r\n      title: \"Out\",\r\n      dataIndex: \"check_out\",\r\n      render: (text) => (text === null ? \"Not yet out\" : text.substr(11, 5)),\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n        <Breadcrumb.Item>Attendance</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Modal\r\n        title={dataTemp.employe}\r\n        visible={isOpen}\r\n        onCancel={onClose}\r\n        footer={false}\r\n      >\r\n        <FlexContainer style={{ marginBottom: \"14px\" }}>\r\n          <div>\r\n            <Text strong style={{ fontSize: 18 }}>\r\n              {dataTemp.check_in?.substr(0, 10)}\r\n            </Text>\r\n          </div>\r\n          <div>\r\n            <Space>\r\n              <Tag color={successColor}>\r\n                <Text strong style={{ fontSize: 16, color: \"white\" }}>\r\n                  IN {dataTemp.check_in?.substr(11, 5)}\r\n                </Text>\r\n              </Tag>\r\n              <Tag color={dangerColor}>\r\n                <Text strong style={{ fontSize: 16, color: \"white\" }}>\r\n                  OUT{\" \"}\r\n                  {dataTemp.check_out === null\r\n                    ? \"-\"\r\n                    : dataTemp.check_out?.substr(11, 5)}\r\n                </Text>\r\n              </Tag>\r\n            </Space>\r\n          </div>\r\n        </FlexContainer>\r\n        <ListPhoto label=\"Photo In\" image={dataTemp.check_in_photo} />\r\n        <ListContent label=\"Coordinate In\">\r\n          Lat: {dataTemp.check_in_lat}, Lng: {dataTemp.check_in_long}\r\n        </ListContent>\r\n        <ListPhoto\r\n          label=\"Photo Out\"\r\n          time={dataTemp.check_out}\r\n          image={dataTemp.check_out_photo}\r\n        />\r\n        <ListContent label=\"Coordinate Out\">\r\n          Lat: {dataTemp.check_out_lat}, Lng: {dataTemp.check_out_long}\r\n        </ListContent>\r\n      </Modal>\r\n      <div>\r\n        <Card>\r\n          <Title level={4} type=\"secondary\">\r\n            Attendance\r\n          </Title>\r\n          <FlexContainer>\r\n            <Form form={form} name=\"form-attendance\" autoComplete=\"off\">\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <FormRangePicker\r\n                  name=\"date\"\r\n                  required\r\n                  message=\"please select date\"\r\n                  onChange={(date, dateString) => setDate(dateString)}\r\n                  format=\"YYYY-MM-DD\"\r\n                />\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<FiFilter style={{ marginRight: \"6px\" }} />}\r\n                    onClick={handleFilterDate}\r\n                    loading={loading}\r\n                    htmlType=\"submit\"\r\n                    style={{ marginLeft: 16 }}\r\n                  >\r\n                    Show\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            </Form>\r\n            <FlexEnd style={{ marginBottom: 14 }}>\r\n              <Button\r\n                shape=\"round\"\r\n                icon={<RiFileExcel2Line style={{ marginRight: \"6px\" }} />}\r\n                onClick={ExportToExcel}\r\n                loading={loadingExport}\r\n              >\r\n                Export\r\n              </Button>\r\n            </FlexEnd>\r\n          </FlexContainer>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <FormSelect\r\n              name=\"empId\"\r\n              placeholder=\"filter employee\"\r\n              onChange={(e) => setEmpId(e)}\r\n              loading={loadingEmployee}\r\n              disabled={loadingEmployee}\r\n              style={{ minWidth: 290 }}\r\n            >\r\n              {dataEmployee.map((item) => (\r\n                <Option value={item.id} key={item.id}>\r\n                  {`[${item.id}] ${item.name}`}\r\n                </Option>\r\n              ))}\r\n            </FormSelect>\r\n          </div>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            rowKey={(record) => record.id}\r\n            loading={loading}\r\n            scroll={{ y: 500 }}\r\n            pagination={{\r\n              total: pagination.total_data,\r\n              showTotal: (total, range) =>\r\n                `${range[0]}-${range[1]} of ${total} items`,\r\n              showQuickJumper: true,\r\n              defaultCurrent: 1,\r\n              onChange: (pageNumber) =>\r\n                setConfigData({\r\n                  ...configData,\r\n                  page: pageNumber,\r\n                }),\r\n              showSizeChanger: true,\r\n              onShowSizeChange: (current, pageSize) => setPerPage(pageSize),\r\n              defaultPageSize: perPage,\r\n              pageSizeOptions: [20, 60, 100, 140],\r\n            }}\r\n          />\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuth(Attendance);\r\n"],"names":["WrappedComponent","protectedPage","props","authContext","useContext","AuthContext","navigate","useNavigate","accessToken","userToken","useEffect","window","indexOf","userRole","replace","isLoading","console","log","Title","Typography","Text","Option","Select","ListContent","label","children","style","display","flexDirection","marginBottom","type","level","marginTop","ListPhoto","image","time","width","height","overflow","src","myDate","date","moment","format","withAuth","signOut","useState","page","fromdate","firstDate","todate","lastDate","update","configData","setConfigData","perPage","setPerPage","empId","setEmpId","useGetDataPagination","data","pagination","loading","useGetData","dataEmployee","loadingEmployee","setDate","dataTemp","setDataTemp","loadingExport","setLoadingExport","Form","form","useDisclosure","isOpen","onOpen","onClose","setFieldsValue","ExportToExcel","axios","endpoint","headers","Authorization","responseType","response","Error","message","fileDownload","status","statusText","columns","title","dataIndex","render","text","record","strong","cursor","onClick","ellipsis","responsive","substr","margin","employe","visible","onCancel","footer","fontSize","check_in","color","successColor","dangerColor","check_out","check_in_photo","check_in_lat","check_in_long","check_out_photo","check_out_lat","check_out_long","name","autoComplete","required","onChange","dateString","shape","icon","marginRight","length","htmlType","marginLeft","placeholder","e","disabled","minWidth","map","item","value","id","dataSource","rowKey","scroll","y","total","total_data","showTotal","range","showQuickJumper","defaultCurrent","pageNumber","showSizeChanger","onShowSizeChange","current","pageSize","defaultPageSize","pageSizeOptions"],"sourceRoot":""}
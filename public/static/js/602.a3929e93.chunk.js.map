{"version":3,"file":"static/js/602.a3929e93.chunk.js","mappings":"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","sources":["HOC/withAuth.js","Pages/Attendance/AttendanceLog.js"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Store/AuthContext\";\r\nconst withAuth = (WrappedComponent, protectedPage) => {\r\n  // eslint-disable-next-line react/display-name\r\n  return (props) => {\r\n    const authContext = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n    const accessToken = authContext.userToken;\r\n\r\n    useEffect(() => {\r\n      if (typeof window !== \"undefined\") {\r\n        if (!accessToken) {\r\n          navigate(\"/auth\", { replace: true });\r\n        } else if (protectedPage?.indexOf(authContext.userRole) === -1) {\r\n          navigate(\"/403\", { replace: true });\r\n        }\r\n      }\r\n    }, [accessToken, authContext.userRole, navigate]);\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      if (authContext.isLoading) {\r\n        console.log(\"loading from with auth\");\r\n        return null;\r\n      }\r\n\r\n      return <WrappedComponent {...props} />;\r\n    }\r\n    return null;\r\n  };\r\n};\r\n\r\nexport default withAuth;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, Typography, Table, Select, Form, Button } from \"antd\";\r\nimport withAuth from \"../../HOC/withAuth\";\r\nimport {\r\n  Card,\r\n  FormSelect,\r\n  FlexContainer,\r\n  FormRangePicker,\r\n} from \"../../Components\";\r\nimport { useGetData, useGetDataPagination } from \"../../Hooks\";\r\nimport moment from \"moment\";\r\nimport { FiFilter } from \"react-icons/fi\";\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst myDate = (date) => {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nconst AttendanceLog = () => {\r\n  const tanggal = new Date();\r\n\r\n  const [configData, setConfigData] = useState({\r\n    page: 1,\r\n    fromdate: myDate(tanggal),\r\n    todate: myDate(tanggal),\r\n    update: false,\r\n  });\r\n  const [perPage, setPerPage] = useState(20);\r\n  const [empId, setEmpId] = useState(\"\");\r\n\r\n  const { data, pagination, loading } = useGetDataPagination(\r\n    `attendance/view/logs?emp_id=${empId}&from=${configData.fromdate}&to=${configData.todate}&page=${configData.page}&perpage=${perPage}`\r\n  );\r\n  const { data: dataEmployee, loading: loadingEmployee } =\r\n    useGetData(\"employee\");\r\n\r\n  const [date, setDate] = useState([myDate(tanggal), myDate(tanggal)]);\r\n\r\n  const navigate = useNavigate();\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      date: [moment(tanggal), moment(tanggal)],\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleFilterDate = () => {\r\n    if (date.length === 0) {\r\n      console.log(\"Form tidak bolah kosong\");\r\n\r\n      return null;\r\n    }\r\n\r\n    setConfigData({\r\n      ...configData,\r\n      page: 1,\r\n      fromdate: date[0],\r\n      todate: date[1],\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      width: 70,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"employee\",\r\n    },\r\n    {\r\n      title: \"Site\",\r\n      dataIndex: \"site_id\",\r\n    },\r\n    {\r\n      title: \"Coordinate\",\r\n      dataIndex: \"latitude\",\r\n      render: (text, record) => `${text}°, ${record.longitude}°`,\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"City\",\r\n      dataIndex: \"city\",\r\n    },\r\n    {\r\n      title: \"Province\",\r\n      dataIndex: \"province\",\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"time\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n        <Breadcrumb.Item\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => navigate(\"/attendance\")}\r\n        >\r\n          Attendance\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Log</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div>\r\n        <Card>\r\n          <Title\r\n            level={3}\r\n            type=\"secondary\"\r\n            style={{ marginRight: 20, marginBottom: 30 }}\r\n          >\r\n            Attendance Log\r\n          </Title>\r\n          <FlexContainer>\r\n            <Form form={form} name=\"form-attendance\" autoComplete=\"off\">\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <FormRangePicker\r\n                  name=\"date\"\r\n                  required\r\n                  message=\"please select date\"\r\n                  onChange={(date, dateString) => setDate(dateString)}\r\n                  format=\"YYYY-MM-DD\"\r\n                />\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<FiFilter style={{ marginRight: \"6px\" }} />}\r\n                    onClick={handleFilterDate}\r\n                    loading={loading}\r\n                    htmlType=\"submit\"\r\n                    style={{ marginLeft: 16 }}\r\n                  >\r\n                    Show\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            </Form>\r\n            <div style={{ marginBottom: 14 }}>\r\n              <FormSelect\r\n                name=\"empId\"\r\n                placeholder=\"filter employee\"\r\n                onChange={(e) => setEmpId(e)}\r\n                loading={loadingEmployee}\r\n                disabled={loadingEmployee}\r\n                style={{ minWidth: 290 }}\r\n              >\r\n                {dataEmployee.map((item) => (\r\n                  <Option value={item.id} key={item.id}>\r\n                    {`[${item.id}] ${item.name}`}\r\n                  </Option>\r\n                ))}\r\n              </FormSelect>\r\n            </div>\r\n          </FlexContainer>\r\n          <div style={{ marginTop: \"20px\" }}>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={data}\r\n              rowKey={(record) => record.id}\r\n              loading={loading}\r\n              scroll={{ y: 500 }}\r\n              pagination={{\r\n                total: pagination.total_data,\r\n                showTotal: (total, range) =>\r\n                  `${range[0]}-${range[1]} of ${total} items`,\r\n                showQuickJumper: true,\r\n                defaultCurrent: 1,\r\n                onChange: (pageNumber) =>\r\n                  setConfigData({\r\n                    ...configData,\r\n                    page: pageNumber,\r\n                  }),\r\n                showSizeChanger: true,\r\n                onShowSizeChange: (current, pageSize) => setPerPage(pageSize),\r\n                defaultPageSize: perPage,\r\n                pageSizeOptions: [20, 60, 100, 140],\r\n              }}\r\n            />\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuth(AttendanceLog, [1]);\r\n"],"names":["WrappedComponent","protectedPage","props","authContext","useContext","AuthContext","navigate","useNavigate","accessToken","userToken","useEffect","window","indexOf","userRole","replace","isLoading","console","log","Title","Typography","Option","Select","myDate","date","moment","format","withAuth","tanggal","Date","useState","page","fromdate","todate","update","configData","setConfigData","perPage","setPerPage","empId","setEmpId","useGetDataPagination","data","pagination","loading","useGetData","dataEmployee","loadingEmployee","setDate","Form","form","setFieldsValue","style","margin","cursor","onClick","level","type","marginRight","marginBottom","name","autoComplete","display","flexDirection","required","message","onChange","dateString","shape","icon","length","htmlType","marginLeft","placeholder","e","disabled","minWidth","map","item","value","id","marginTop","columns","title","dataIndex","width","render","text","record","longitude","ellipsis","dataSource","rowKey","scroll","y","total","total_data","showTotal","range","showQuickJumper","defaultCurrent","pageNumber","showSizeChanger","onShowSizeChange","current","pageSize","defaultPageSize","pageSizeOptions"],"sourceRoot":""}